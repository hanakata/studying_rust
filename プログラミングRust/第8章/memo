第8章 クレートとモジュール

Rustプログラムはクレートで構成される。
個々のクレートがプロジェクトを構成する。

create.ioは公開されたクレートがあってCargo.tomlファイルを利用することで
必要なクレートをダウンロードしてくる。

モジュールはRustの名前空間
モジュールはアイテムの集合体。モジュールの外からアクセスできるようにするにはpubをつける。
それ以外は全てプライベートになる。

モジュールは以下のように書くことができる。
mod spores;
クレートをビルドするときは全てのモジュールをコンパイルする。
モジュールはアイテムで構成される。
・関数
・型
・型エイリアス
・implブロック
・定数
・モジュール
・インポート
・externブロック
Rustは宣言だけされて使われていないアイテムがあると警告を出力する。

共有するためライブラリを作成する方法は以下
・ファイルmain.rsをlib.rsに変更する
・lib.rsのパブリック機能部分にpubキーワードを付与する
・main関数をどこか別のところに置いた一時ファイルに避ける。
Cargo.tomlファイルはsrcディレクトリをみてlib.rsがあるとライブラリをビルドすることが分かる。
src/binディレクトリ内にrsファイルがあると自動的にビルドすべきファイルとみなす。

Rustプログラムはどのアイテムでも属性をつけることができる。
例えばキャメルケースにすべきところをしてないけれど警告を止めたい場合は[allow]属性を追加する。
条件付きコンパイルをするには[cfg]属性を付与する。
属性を付与するにはアイテムの前に#[属性]で付与する。
ユニットテストフレームワークを利用するには#[test]利用する。
testで--testの後にファイル名を指定することによってテストを限定的に実行することができる。

cargo docコマンドでHTMLドキュメントが作成できる。
ドキュメントはライブラリのpubのついたものとそれにつけたドキュメントコメントかドクコメントから生成される。
ライブラリの更新はcargo.lockファイルで制御され、cargo.tomlかcargo updateを実行した場合のみ更新される。
cargo.lockファイルはバージョン管理に入れといた方がよい。

Cargoが自動的にダウンロードしてきたライブラリはpath指定を無視する。
