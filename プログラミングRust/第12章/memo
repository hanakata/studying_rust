12章 演算子オーバーロード

独自の型に対して算術演算子をサポートするには組み込みトレイトを実装する。
→この機能を演算子オーバーロードと呼ぶ

式a + bはstd::ops::Addトレイトに含まれるaddメソッドを呼び出す省略形
z.add(c)のように書きたければAddトレイトをスコープに入れてこの関数が見えるようにしておけば
関数呼び出しで描くことができる。
use std::opt::Add;

assert_eq!(4.125f32.add(5.75),9.875);
assert_eq!(10.add(20),10 + 20);

単項演算子は以下
-x
!x

二項演算子は算術演算子とビット演算子がある。
複合代入演算子はほかの言語と同様に用意されている。（x += yみたいなやつ）
等価性テストは== !=でstd::cmp::PartialEqトレイトのeqメソッドとneメソッドの省略形。

順序比較（< ,> とか）はstd::cmp::PartialOrdで指定している。

std::ops::Indexとstd::ops::IndexMutトレイトを実装することで独自の型に対するa[i]のような
インデックス式の動作を指定することができる。

